"""
toy plc1.py
"""

from minicps.devices import PLC
from utils import PLC1_DATA, STATE
from utils import PLC1_PROTOCOL, PLC1_ADDR

import time
import os
import sys


# constant tag addresses
SENSOR1_1 = ('HR', 0, '2a')
SENSOR2_1 = ('HR', 1, '2a')
COUNTER_1 = ('HR', 2, '2a')

#From https://www.101computing.net/python-turtle-wordart-challenge/
alphabet = {
    'A': ((0, 0), (0.5, 1), (0.75, 0.5), (0.25, 0.5), (0.75, 0.5), (1, 0)),
    'B': ((0, 0), (0, 1), (0.625, 1), (0.75, 0.875), (0.75, 0.625), (0.625, 0.5), (0, 0.5), (0.625, 0.5), (0.75, 0.375), (0.75, 0.125), (0.625, 0), (0, 0)),
    'C': ((0.75, 0.125), (0.625, 0), (0.125, 0), (0, 0.125), (0, 0.875), (0.125, 1), (0.625, 1), (0.75, 0.875)),
    'D': ((0, 0), (0, 1), (0.625, 1), (0.75, 0.875), (0.75, 0.125), (0.625, 0), (0, 0)),
    'E': ((0.75, 0), (0, 0), (0, 0.5), (0.75, 0.5), (0, 0.5), (0, 1), (0.75, 1)),
    'F': ((0, 0), (0, 0.5), (0.75, 0.5), (0, 0.5), (0, 1), (0.75, 1)),
    'G': ((0.75, 0.5), (0.625, 0.5), (0.75, 0.5), (0.75, 0.125), (0.625, 0), (0.125, 0), (0, 0.125), (0, 0.875), (0.125, 1), (0.625, 1), (0.75, 0.875)),
    'H': ((0, 0), (0, 1), (0, 0.5), (0.75, 0.5), (0.75, 1), (0.75, 0)),
    'I': ((0, 0), (0.25, 0), (0.125, 0), (0.125, 1), (0, 1), (0.25, 1)),
    'J': ((0, 0.125), (0.125, 0), (0.375, 0), (0.5, 0.125), (0.5, 1)),
    'K': ((0, 0), (0, 1), (0, 0.5), (0.75, 1), (0, 0.5), (0.75, 0)),
    'L': ((0, 0), (0, 1), (0, 0), (0.75, 0)),
    'M': ((0, 0), (0, 1), (0.5, 0), (1, 1), (1, 0)),
    'N': ((0, 0), (0, 1), (0.75, 0), (0.75, 1)),
    'O': ((0.75, 0.125), (0.625, 0), (0.125, 0), (0, 0.125), (0, 0.875), (0.125, 1), (0.625, 1), (0.75, 0.875), (0.75, 0.125)),
    'P': ((0, 0), (0, 1), (0.625, 1), (0.75, 0.875), (0.75, 0.625), (0.625, 0.5), (0, 0.5)),
    'Q': ((0.75, 0.125), (0.625, 0), (0.125, 0), (0, 0.125), (0, 0.875), (0.125, 1), (0.625, 1), (0.75, 0.875), (0.75, 0.125), (0.875, 0)),
    'R': ((0, 0), (0, 1), (0.625, 1), (0.75, 0.875), (0.75, 0.625), (0.625, 0.5), (0, 0.5), (0.625, 0.5), (0.875, 0)),
    'S': ((0, 0.125), (0.125, 0), (0.625, 0), (0.75, 0.125), (0.75, 0.375), (0.675, 0.5), (0.125, 0.5), (0, 0.625), (0, 0.875), (0.125, 1), (0.625, 1), (0.75, 0.875)),
    'T': ((0, 1), (0.5, 1), (0.5, 0), (0.5, 1), (1, 1)),
    'U': ((0, 1), (0, 0.125), (0.125, 0), (0.625, 0), (0.75, 0.125), (0.75, 1)),
    'V': ((0, 1), (0.375, 0), (0.75, 1)),
    'W': ((0, 1), (0.25, 0), (0.5, 1), (0.75, 0), (1, 1)),
    'X': ((0, 0), (0.375, 0.5), (0, 1), (0.375, 0.5), (0.75, 1), (0.375, 0.5), (0.75, 0)),
    'Y': ((0, 1), (0.375, 0.5), (0.375, 0), (0.375, 0.5), (0.75, 1)),
    'Z': ((0, 1), (0.75, 1), (0, 0), (0.75, 0)),
}

flag = "INSAHACKINDUSTRIALPROCESS"
class ToyPLC1(PLC):

    def pre_loop(self, sleep=0.1):
        time.sleep(10)


    def main_loop(self, sleep=0.5):
        print 'DEBUG: toy plc1 enters main_loop'
        print


        while(True):
            for ind,letter in enumerate(flag):
                self.send(COUNTER_1,ind,"10.0.0.3:502")
                for coord in alphabet[letter]:
                    self.send(SENSOR1_1, int(1000*coord[0]), "10.0.0.3:502")
                    self.send(SENSOR2_1, int(1000*coord[1]), "10.0.0.3:502")
                    time.sleep(1)
            break
        print "END"



if __name__ == "__main__":

    # notice that memory init is different form disk init
    plc1 = ToyPLC1(
        name='plc1',
        state=STATE,
        protocol=PLC1_PROTOCOL)
