#!/usr/bin/env bash
# exit on error
set -e
# ------------------------------------------------------------------------------
# FUNCTIONS
# ------------------------------------------------------------------------------
function print {
    (>&2 printf "\x1b[34m${1}\x1b[0m\n")
}
function exit_success {
    (>&2 printf "\x1b[32m- Script succeeded.\x1b[0m\n")
    exit 0
}
function exit_failure {
    (>&2 printf "\x1b[31m- Script failed.\x1b[0m\n")
    exit 1
}
function exit_non_applicable {
    (>&2 printf "\x1b[36m- Script non applicable.\x1b[0m\n")
    exit 2
}
function exit_manual {
    (>&2 printf "\x1b[33m- Script requires a manual operation.\x1b[0m\n")
    exit 3
}
function exit_not_implemented {
    (>&2 printf "\x1b[35m- Script not implemented.\x1b[0m\n")
    exit 4
}
function check_flag {
    print "- Checking flag..."
    expected_flag=$(cat ../.mkctf.yml | grep -E 'INSA{' | cut -d' ' -f2)
    if [ "${1}" = "${expected_flag}" ]; then
        exit_success
    fi
    exit_failure
}
# ------------------------------------------------------------------------------
# VARIABLES
# ------------------------------------------------------------------------------
DEBUG=0
VENV=venv
PIP=${VENV}/bin/pip
UNLOL=unlol.py
PYTHON=${VENV}/bin/python3
STATIC_URL=https://static.ctf.insecurity-insa.fr/a893dacde4b3fd97d924430b583bc7b3968b1ce4.tar.gz
EXPLOIT_TMP=tmp
EMBEDDED_ZIP=obscure-file-format.zip
# ------------------------------------------------------------------------------
# ARGUMENT PARSER
# ------------------------------------------------------------------------------
while [[ $# -gt 0 ]]
do
key="$1"
case ${key} in
    -d|--debug)
    DEBUG=1
    shift # past argument
    ;;
    *)    # unknown option
    print "unknown option: ${key}"
    shift # past argument
    ;;
esac
done
# ------------------------------------------------------------------------------
# MAIN SCRIPT
# ------------------------------------------------------------------------------
if [ ${DEBUG} -eq 0 ]; then
    print "- Downloading archive..."
    wget -O downloaded.tar.gz ${STATIC_URL}
    print "- Extracting embedded zip archive from tar archive..."
    tar xzvf downloaded.tar.gz ${EMBEDDED_ZIP}
else
    print "- Copying archive..."
    cp ../public-files/${EMBEDDED_ZIP} .
fi
print "- Uncompressing archive..."
unzip -o -d ${EXPLOIT_TMP} ${EMBEDDED_ZIP}
print "- Removing archive..."
rm -f ${EMBEDDED_ZIP}

print "- Setting up venv..."
python3 -m venv ${VENV}
print "-- Installing requirements..."
${PIP} install --upgrade -r requirements.txt

print "- Unloling archive..."
${PYTHON} ${UNLOL} ${EXPLOIT_TMP}/a ${EXPLOIT_TMP}/k ${EXPLOIT_TMP}

FLAG=$(grep -r "INSA{" ${EXPLOIT_TMP}/tmp | cut -d':' -f2)

print "- Removing ${EXPLOIT_TMP}..."
rm -rf ${EXPLOIT_TMP}

check_flag ${FLAG}
