#!/usr/bin/env bash
# exit on error
set -e
# ------------------------------------------------------------------------------
# FUNCTIONS
# ------------------------------------------------------------------------------
function print {
    (>&2 printf "\x1b[34m${1}\x1b[0m\n")
}
function exit_success {
    (>&2 printf "\x1b[32m- Script succeeded.\x1b[0m\n")
    exit 0
}
function exit_failure {
    (>&2 printf "\x1b[31m- Script failed.\x1b[0m\n")
    exit 1
}
function exit_non_applicable {
    (>&2 printf "\x1b[36m- Script non applicable.\x1b[0m\n")
    exit 2
}
function exit_manual {
    (>&2 printf "\x1b[33m- Script requires a manual operation.\x1b[0m\n")
    exit 3
}
function exit_not_implemented {
    (>&2 printf "\x1b[35m- Script not implemented.\x1b[0m\n")
    exit 4
}
function check_flag {
    print "- Checking flag..."
    expected_flag=$(cat ../.mkctf.yml | grep -E 'INSA{' | cut -d' ' -f2)
    if [ "${1}" = "${expected_flag}" ]; then
        exit_success
    fi
    exit_failure
}
# ------------------------------------------------------------------------------
# VARIABLES
# ------------------------------------------------------------------------------
DEBUG=0
ARCH=tower-of-babel.tar.gz
MEM_DMP=mem.dmp
STATIC_URL=https://static.ctf.insecurity-insa.fr/fc1fb6481ee711d32bcc8b715dc0c7e06b394d50-extra.tar.gz
# ------------------------------------------------------------------------------
# ARGUMENT PARSER
# ------------------------------------------------------------------------------
while [[ $# -gt 0 ]]
do
key="$1"
case ${key} in
    -d|--debug)
    DEBUG=1
    shift # past argument
    ;;
    *)    # unknown option
    print "unknown option: ${key}"
    shift # past argument
    ;;
esac
done
# ------------------------------------------------------------------------------
# MAIN SCRIPT
# ------------------------------------------------------------------------------
if [ ${DEBUG} -eq 0 ]; then
    print "- Downloading archive..."
    wget -O ${ARCH} ${STATIC_URL}
else
    print "- Copying memory dump..."
    if [ ! -f ../public-files/${ARCH} ]; then
        print "- ../public-files/${ARCH} not found. Aborting."
        exit_failure
    fi
    cp ../public-files/${ARCH} .
fi
print "- Uncompressing archive..."
tar xzvf ${ARCH} ${MEM_DMP}
print "- Removing archive..."
rm -f ${ARCH}

print "- Setting up venv..."
python3 -m venv venv
print "- Installing dependencies..."
venv/bin/pip install pyelftools
print "- Extracting flag from memory dump..."
FLAG=$(venv/bin/python3 extractor.py ${MEM_DMP})

check_flag ${FLAG}
