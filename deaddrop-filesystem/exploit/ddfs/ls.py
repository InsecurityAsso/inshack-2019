#!/usr/bin/env python3

from pathlib import Path
from argparse import ArgumentParser
from ddfs.index import Index
from ddfs.record import Record
from ddfs.crypto import pbkdf

def parse_args():
    '''[summary]
    '''
    p = ArgumentParser(description="List DDFS files")
    p.add_argument('root', type=Path)
    p.add_argument('username')
    p.add_argument('password')
    p.add_argument('--recurse', '-r', action='store_true')
    return p.parse_args()

def ls(root, key, recursive=False, depth=0):
    '''[summary]
    '''
    index_path = root.joinpath(Index.FILENAME)

    if not index_path.is_file():
        raise RuntimeError(f"Expected an index having path: {index_path}")

    index = Index(index_path)

    for record in index.records:

        if record.used:
            try:
                record.decrypt(key)
            except RuntimeError:
                print('skipped record.')
            else:
                indent = '\t' * depth
                print(f'{indent}{record}')

        if record.type == Record.Type.DIRECTORY and recursive:
            ls(root.joinpath(record.hash), key, recursive, depth+1)

def main():
    '''[summary]
    '''
    args = parse_args()
    ls(args.root, pbkdf(args.username, args.password), args.recurse)

if __name__ == '__main__':
    main()

