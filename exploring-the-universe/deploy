#!/usr/bin/env bash
# file automatically generated by mkctf.
# abort on error
set -e
# ------------------------------------------------------------------------------
# FUNCTIONS
# ------------------------------------------------------------------------------
function print {
    (>&2 printf "\x1b[34m${1}\x1b[0m\n")
}
function exit_success {
    (>&2 printf "\x1b[32m- Script succeeded.\x1b[0m\n")
    exit 0
}
function exit_failure {
    (>&2 printf "\x1b[31m- Script failed.\x1b[0m\n")
    exit 1
}
function exit_non_applicable {
    (>&2 printf "\x1b[36m- Script non applicable.\x1b[0m\n")
    exit 2
}
function exit_manual {
    (>&2 printf "\x1b[33m- Script requires a manual operation.\x1b[0m\n")
    exit 3
}
function exit_not_implemented {
    (>&2 printf "\x1b[35m- Script not implemented.\x1b[0m\n")
    exit 4
}
# ------------------------------------------------------------------------------
# VARIABLES
# ------------------------------------------------------------------------------
DEBUG=0
RUN=0
KILL=0
BUILD=0
CONTAINER_NAME=exploring-the-universe
# ------------------------------------------------------------------------------
# ARGUMENT PARSER
# ------------------------------------------------------------------------------
while [[ $# -gt 0 ]]
do
key="$1"
case ${key} in
    -d|--debug)
    DEBUG=1
    shift # past argument
    ;;
    -b|--build)
    BUILD=1
    shift # past argument
    ;;
    -r|--run)
    RUN=1
    shift # past argument
    ;;
    -k|--kill)
    KILL=1
    shift # past argument
    ;;
    *)    # unknown option
    print "unknown option: ${key}"
    shift # past argument
    ;;
esac
done
# ------------------------------------------------------------------------------
# MAIN SCRIPT
# ------------------------------------------------------------------------------
if [ ${BUILD} -eq 1 ]; then
    if [ ${DEBUG} -eq 1 ]; then
        print "- Building docker image..."
        sudo docker build -t koromodako/${CONTAINER_NAME} .
    else
        print "- Building docker image..."
        sudo docker build -t registry-chal.infra.insecurity-insa.fr/insecurity/${CONTAINER_NAME} .
        print "- Login in registry-chal..."
        sudo docker login registry-chal.infra.insecurity-insa.fr
        print "- Pushing image to registry-chal..."
        sudo docker push registry-chal.infra.insecurity-insa.fr/insecurity/${CONTAINER_NAME}
    fi
fi
if [ ${RUN} -eq 1 ]; then
    print "- Spawning docker container..."
    sudo docker run -d -p 8080:8080 --name ${CONTAINER_NAME} koromodako/${CONTAINER_NAME}
fi
if [ ${KILL} -eq 1 ]; then
    print "- Stopping docker container..."
    sudo docker stop ${CONTAINER_NAME}
    sudo docker rm ${CONTAINER_NAME}
fi
print "- Done."
exit_success
